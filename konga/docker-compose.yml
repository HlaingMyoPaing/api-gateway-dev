version: "3.9"

networks:
  kong-net:
    external: true

services:
  konga-db:
    image: postgres:11-alpine
    container_name: konga-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${KONGA_DB_NAME}
      POSTGRES_USER: ${KONGA_DB_USER}
      POSTGRES_PASSWORD: ${KONGA_DB_PASSWORD}
    ports:
      - "${KONGA_DB_PORT}:5432"
    volumes:
      - konga_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${KONGA_DB_USER} -d ${KONGA_DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 20
    networks: [kong-net]

  konga-prepare:
    image: pantsel/konga:next
    container_name: konga-prepare
    depends_on:
      konga-db:
        condition: service_healthy
    environment:
      NODE_ENV: production
    command: ["-c","prepare","-a","postgres","-u","postgres://${KONGA_DB_USER}:${KONGA_DB_PASSWORD}@konga-db:5432/${KONGA_DB_NAME}"]
    restart: "no"
    networks: [kong-net]

  konga:
    image: pantsel/konga:latest
    container_name: konga
    depends_on:
      konga-prepare:
        condition: service_completed_successfully
    environment:
      NODE_ENV: production
      TOKEN_SECRET: ${KONGA_TOKEN_SECRET}
      DB_ADAPTER: postgres
      DB_HOST: konga-db
      DB_USER: ${KONGA_DB_USER}
      DB_PASSWORD: ${KONGA_DB_PASSWORD}
      DB_DATABASE: ${KONGA_DB_NAME}
      DB_PORT: 5432
      BASE_URL: /
    expose:
      - "1337:1337"
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "wget", "-qSO", "-", "http://127.0.0.1:1337/", "--spider" ]
      interval: 10s
      timeout: 5s
      retries: 20
    networks: [kong-net]

  admin-proxy:
    image: nginx:1.25-alpine
    container_name: admin-proxy
    depends_on:
      konga:
        condition: service_healthy
    ports:
      - "${ADMIN_PROXY_PORT}:80"
    volumes:
      - ./nginx/admin.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
    networks: [kong-net]

volumes:
  konga_pgdata:
